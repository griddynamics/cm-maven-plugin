Configuration layers

  There may be as much configuration layers as required by specific project.
  Configuration layers are defined using plugin configuration in the following way:

---
<project>
  [...]
  <build>
    [...]
    <plugins>
      [...]
      <plugin>
        <artifactId>cm-maven-plugin</artifactId>
        <configuration>
          [...]
          <layers>
            <layer>
              <name>application</name>
            </layer>
            <layer>
              <name>environment</name>
            </layer>
            <layer>
              <name>instance</name>
            </layer>
          </layers>
          [...]
        </configuration>
        [...]
</project>
---

  Such configuration layer structure defines the following project structure:

---
├─application
│ ├─config
│ │ └─...
│ └─environment
│   ├─qa
│   ├─uat
│   └─prod
│     └─config
│       └─instance
│         ├─frontend
│         └─backend
│           └─config
│             └...
└─pom.xml
---

  Every layer in this tree is optional.
  However, creating directory (qa, uat, prod, frontent, backend) of the desired layer will give plugin a signal,
  that such layer exists.

  By default plugin creates only leafs of configuration tree which may be overridden in layers configuration:

---
[...]
<layer>
  <name>environment</name>
  <includeNode>true</includeNode>
  <includeLeaf>false</includeLeaf>
</layer>
[...]
---

  * <<includeNode>> set to true tells plugin to build configuration artifact even if there is more specific layer.

  * <<includeLeaf>> set to false tells plugin not to build configuration artifact if there are no more specific layers.

  Of course these two options may be used separately. By default <<includeNode>>=false, <<includeLeaf>>=true which makes
  plugin to build only configuration tree leafs.

  The next section describes in details how configuration is merged.
